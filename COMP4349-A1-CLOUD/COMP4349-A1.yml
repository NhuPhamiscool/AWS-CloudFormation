AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for deploying an EC2 instance and an RDS instance for the Cafe Web application

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type
  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    Description: RDS instance class
  DBName:
    Type: String
    Default: cafedatabase
    Description: Name of the database
  DBUsername:
    Type: String
    Default: admin
    Description: Username for the database
  DBPassword:
    Type: String
    NoEcho: true
    Description: Password for the database
  

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.2.0/23"
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
  
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "DB subnet group for RDS instance"
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  
  IGWRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Allow SSH traffic from all IP addresses

  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instance
      VpcId: !Ref VPC


  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: "ami-051f8a213df8bc089" #  AMI ID
      SubnetId: !Ref PublicSubnet1  
      SecurityGroupIds:
        - !GetAtt SecurityGroupEC2.GroupId

      KeyName: Cafe
      UserData:
        Fn::Base64: |
          #!/bin/bash
          dnf install -y httpd php php-mysqli mariadb105
          systemctl enable httpd
          systemctl start httpd

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: cafedatabase
      AllocatedStorage: 20
      DBInstanceClass: !Ref DBInstanceClass
      Engine: mysql
      EngineVersion: "8.0.35"
      LicenseModel: "general-public-license"  # Ensure it matches the license model
      DBName: !Ref DBName
      MasterUsername: admin
      MasterUserPassword: Re:Start!9
      MultiAZ: false
      PubliclyAccessible: True
      DBSubnetGroupName: !Ref DBSubnetGroup




Outputs:
  DBInstanceEndpoint:
    Description: Endpoint of database instance.
    Value: !GetAtt RDSInstance.Endpoint.Address

  EC2InstanceAdress:
    Description: Endpoint of ec2 instance.
    Value: !GetAtt EC2Instance.PublicDnsName
